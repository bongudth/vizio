digraph my_graph {
bgcolor="white"
4348771024 [shape=ellipse] [label="Start"] [type="START"] [style=filled fillcolor="#0B2447" fontcolor=white]
4348769040 [label=""]
4348771344 [shape=diamond] [label="n < 0"] [type="CONDITIONS"] [style=filled fillcolor="#ECB365" fontcolor=black]
4348771472 [shape=parallelogram] [label="print('Incorrect input')"] [type="STATEMENT"] [style=filled fillcolor="#FFC6D3" fontcolor=black]
4348771664 [shape=diamond] [label="n == 0"] [type="CONDITIONS"] [style=filled fillcolor="#ECB365" fontcolor=black]
4348771408 [shape=ellipse] [label="0"] [type="RETURN"] [style=filled fillcolor="#BAD7E9" fontcolor=black]
4348771856 [shape=diamond] [label="n == 1 or n == 2"] [type="CONDITIONS"] [style=filled fillcolor="#ECB365" fontcolor=black]
4348771920 [shape=ellipse] [label="1"] [type="RETURN"] [style=filled fillcolor="#BAD7E9" fontcolor=black]

4348772048 [shape=ellipse] [label="fibonacci(n - 1) + fibonacci(n - 2)"] [type="RETURN"] [style=filled fillcolor="#BAD7E9" fontcolor=black]
4348772176 [shape=parallelogram] [label="print(fibonacci(9))"] [type="STATEMENT"] [style=filled fillcolor="#FFC6D3" fontcolor=black]
4348805200 [shape=ellipse] [label="End"] [type="END"] [style=filled fillcolor="#F45050" fontcolor=white]
subgraph cluster_fibonacci {
label = "fibonacci";
4348769040 -> 4348771344  [source = "@if_to_prev_node : ACNode(info={'name': 'fibonacci', 'args': ['n']}, type=DEF, indent=0) ===> ACNode(info={'conditions': ['n < 0'], 'type': 'IF'}, type=CONDITIONS, indent=4)"] ;

4348771344 -> 4348771664 [label = elif] [source = "@if_or_if_to_elif : ACNode(info={'conditions': ['n < 0'], 'type': 'IF'}, type=CONDITIONS, indent=4) ===> ACNode(info={'conditions': ['n == 0'], 'type': 'ELIF'}, type=CONDITIONS, indent=4)"] [color=red];

4348771664 -> 4348771856 [label = elif] [source = "@if_or_if_to_elif : ACNode(info={'conditions': ['n == 0'], 'type': 'ELIF'}, type=CONDITIONS, indent=4) ===> ACNode(info={'conditions': ['n == 1 or n == 2'], 'type': 'ELIF'}, type=CONDITIONS, indent=4)"] [color=red];

4348771472 -> 4348769040  [source = "@last_child_to_next_sibling : ACNode(info={'type': 'StatementType.STATEMENT_METHOD', 'value': 'print('Incorrect input')'}, type=STATEMENT, indent=8) ===> ACNode(info={'name': 'fibonacci', 'args': ['n']}, type=DEF, indent=0)"] ;
4348771344 -> 4348771472 [label = True] [source = "@parent_to_child : ACNode(info={'conditions': ['n < 0'], 'type': 'IF'}, type=CONDITIONS, indent=4) ===> ACNode(info={'type': 'StatementType.STATEMENT_METHOD', 'value': 'print('Incorrect input')'}, type=STATEMENT, indent=8)"] [color=green];
{rank = same; 4348771664; 4348771408;}

4348771408 -> 4348805200  [source = "@return_to_end : ACNode(info={'name': '0'}, type=RETURN, indent=8) ===> {}"] ;

4348771664 -> 4348771408 [label = True] [source = "@return_2 : ACNode(info={'conditions': ['n == 0'], 'type': 'ELIF'}, type=CONDITIONS, indent=4) ===> ACNode(info={'name': '0'}, type=RETURN, indent=8)"] ;
{rank = same; 4348771856; 4348771920;}

4348771920 -> 4348805200  [source = "@return_to_end : ACNode(info={'name': '1'}, type=RETURN, indent=8) ===> {}"] ;

4348771856 -> 4348771920 [label = True] [source = "@return_2 : ACNode(info={'conditions': ['n == 1 or n == 2'], 'type': 'ELIF'}, type=CONDITIONS, indent=4) ===> ACNode(info={'name': '1'}, type=RETURN, indent=8)"] ;
4348771856 -> 4348772048 [label = else] [source = " : ACNode(info={'conditions': ['n == 1 or n == 2'], 'type': 'ELIF'}, type=CONDITIONS, indent=4) ===> ACNode(info={'name': 'fibonacci(n - 1) + fibonacci(n - 2)'}, type=RETURN, indent=8)"] ;
{rank = same; 4348772048;}

4348772048 -> 4348805200  [source = "@return_to_end : ACNode(info={'name': 'fibonacci(n - 1) + fibonacci(n - 2)'}, type=RETURN, indent=8) ===> {}"] ;

}4348772176 -> 4348805200  [source = "@prev_to_end : ACNode(info={'type': 'StatementType.STATEMENT_METHOD', 'value': 'print(fibonacci(9))'}, type=STATEMENT, indent=0) ===> {}"] ;

}
